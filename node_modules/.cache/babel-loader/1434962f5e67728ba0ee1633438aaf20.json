{"ast":null,"code":"var _jsxFileName = \"/Users/vodenizeko/Desktop/Ned/weather-app/weather/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Modal, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport sunny from \"./images/sunny.png\";\nimport cloudy from \"./images/cloudy.png\";\nimport rainy from \"./images/rain.png\";\nimport snow from \"./images/snow.png\";\nimport tornado from \"./images/tornado.png\";\nimport thunder from \"./images/thunder.png\";\nimport windy from \"./images/windy.png\";\nimport arrow from \"./images/arrow.png\";\nimport humidity from \"./images/humidity.png\";\nconst api = {\n  key: \"67b10bbf46e6fecb07c0365d103c7e1f\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst cityData = {\n  base: \"https://api.openweathermap.org/data/2.5/onecall?\"\n};\n\nfunction MyModal(props) {\n  const [query, setQuery] = useState(\"\");\n  const [coord, setCoord] = useState({\n    lat: 47.61,\n    lon: -122.33\n  });\n  const show = props.setModal;\n  const setWeather = props.setWeather;\n  console.log(\"here are the cordinates from modal\", coord);\n\n  async function fetchCoords() {\n    const response = await fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`);\n    const json = await response.json();\n    setCoord(json.coord);\n    setQuery(\"\");\n  }\n\n  useEffect(() => {\n    if (coord) {\n      async function fetchCityData() {\n        const response = await fetch(`${cityData.base}lat=${coord.lat}&lon=${coord.lon}&appid=${api.key}`);\n        const json = await response.json();\n        setWeather(json);\n      }\n\n      fetchCityData();\n    }\n\n    return;\n  }, [coord]);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetchCoords();\n      show(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    style: {\n      position: \"absolute\",\n      background: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      background: \"transparent\",\n      border: \"none\",\n      color: \"red\",\n      fontSize: \"1.5rem\",\n      fontWeight: \"bold\",\n      margin: \"3px\",\n      cursor: \"pointer\"\n    },\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Modal.Title, {\n    style: {\n      fontSize: \"2rem\",\n      textAlign: \"center\"\n    },\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Choose a city ?\"), /*#__PURE__*/React.createElement(Modal.Body, {\n    style: {\n      textAlign: \"center\",\n      margin: \"3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: \"1.2rem\",\n      borderRadius: \"25px\",\n      outline: \"none\",\n      height: \"40px\",\n      textAlign: \"center\"\n    },\n    type: \"text\",\n    className: \"search-box\",\n    placeholder: \"Your city here...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction App(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [weather, setWeather] = useState({});\n\n  if (weather) {\n    console.log(\"here is the weather passed from from modal\", weather);\n  }\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return ` ${date} ${month} ${year}`;\n  };\n\n  const weatherStatus = typeof weather.main != \"undefined\" ? weather.weather[0].main : null;\n\n  let checkWeather = name => {\n    switch (name) {\n      case \"Clear\":\n        return sunny;\n        break;\n\n      case \"Clouds\":\n        return cloudy;\n        break;\n\n      case \"Rain\":\n        return rainy;\n        break;\n\n      case \"Snow\":\n        return snow;\n        break;\n\n      case \"Thunderstorm\":\n        return thunder;\n        break;\n\n      case \"Windy\":\n        return windy;\n        break;\n\n      case \"Tornado\":\n        return tornado;\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"weather-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"weather-gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"date-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"date-dayname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"Tuesday\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"date-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, dateBuilder(new Date())), /*#__PURE__*/React.createElement(\"i\", {\n    class: \"location-icon\",\n    \"data-feather\": \"map-pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Paris, FR\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"weather-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"weather-icon\",\n    \"data-feather\": \"sun\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"weather-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"29\\xB0C\"), /*#__PURE__*/React.createElement(\"h3\", {\n    class: \"weather-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Sunny\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"info-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"today-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"today-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"precipitation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, \"PRECIPITATION\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, \"0 %\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"humidity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, \"HUMIDITY\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, \"34 %\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, \"WIND\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, \"0 km/h\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"week-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    class: \"week-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    class: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"day-icon\",\n    \"data-feather\": \"sun\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, \"Tue\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, \"29\\xB0C\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"day-icon\",\n    \"data-feather\": \"cloud\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, \"Wed\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, \"21\\xB0C\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"day-icon\",\n    \"data-feather\": \"cloud-snow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, \"Thu\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, \"08\\xB0C\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"day-icon\",\n    \"data-feather\": \"cloud-rain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, \"Fry\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, \"19\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalShow(true),\n    class: \"location-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n    \"data-feather\": \"map-pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"Change location\"))))), /*#__PURE__*/React.createElement(MyModal, {\n    setWeather: setWeather,\n    setModal: setModalShow,\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  })) // <div id=\"container\" style={{ display: \"flex\", height: \"100vh\" }}>\n  //   <Card\n  //     style={{\n  //       width: \"28rem\",\n  //       textAlign: \"center\",\n  //       margin: \"0 auto\",\n  //       paddingTop: \"5rem\"\n  //     }}\n  //   >\n  //     <Card.Body>\n  //       <Card.Title style={{ fontSize: \"2rem\" }}>Choose a city ?</Card.Title>\n  //       <div className=\"container\">\n  //         <div class=\"search-box\">\n  //           <input\n  //             type=\"text\"\n  //             className=\"search-box\"\n  //             placeholder=\"Search...\"\n  //             onChange={e => setQuery(e.target.value)}\n  //             value={query}\n  //             onKeyPress={search}\n  //           />\n  //           <span></span>\n  //         </div>\n  //       </div>\n  //       <Card.Text>\n  //         {typeof weather.main != \"undefined\" ? (\n  //           <div\n  //             style={{\n  //               marginTop: \"5rem\",\n  //               fontSize: \"1rem\",\n  //               fontWeight: \"bolder\"\n  //             }}\n  //           >\n  //             <div className=\"location-box\">\n  //               <Card.Img\n  //                 style={{ width: \"200px\" }}\n  //                 src={checkWeather(weatherStatus)}\n  //               />\n  //               <div className=\"location\">\n  //                 {weather.name}, {weather.sys.country}\n  //               </div>\n  //               <div className=\"date\">{dateBuilder(new Date())}</div>\n  //             </div>\n  //             <div className=\"weather-box\">\n  //               <div className=\"temp\">\n  //                 {Math.round(weather.main.temp)}°F | feels like{\" \"}\n  //                 {weather.main.}\n  //               </div>\n  //               <div className=\"weather\">{weather.weather[0].main}</div>\n  //               <div>\n  //                 <img style={{ width: \"10px\" }} src={arrow} />{\" \"}\n  //                 {weather.main.temp_max} °F\n  //               </div>\n  //               <div>\n  //                 <img\n  //                   style={{ width: \"10px\", transform: \"rotate(180deg)\" }}\n  //                   src={arrow}\n  //                 />{\" \"}\n  //                 {weather.main.temp_min} °F\n  //               </div>\n  //               <div>\n  //                 <img style={{ width: \"30px\" }} src={humidity} />\n  //                 {weather.main.humidity}\n  //               </div>\n  //             </div>\n  //           </div>\n  //         ) : (\n  //           \"\"\n  //         )}\n  //       </Card.Text>\n  //     </Card.Body>\n  //   </Card>\n  // </div>\n  ;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vodenizeko/Desktop/Ned/weather-app/weather/src/App.js"],"names":["React","useState","useEffect","Card","Modal","Button","sunny","cloudy","rainy","snow","tornado","thunder","windy","arrow","humidity","api","key","base","cityData","MyModal","props","query","setQuery","coord","setCoord","lat","lon","show","setModal","setWeather","console","log","fetchCoords","response","fetch","json","fetchCityData","search","evt","position","background","textAlign","border","color","fontSize","fontWeight","margin","cursor","onHide","borderRadius","outline","height","e","target","value","App","modalShow","setModalShow","weather","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","weatherStatus","main","checkWeather","name","Date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Modal, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport sunny from \"./images/sunny.png\";\nimport cloudy from \"./images/cloudy.png\";\nimport rainy from \"./images/rain.png\";\nimport snow from \"./images/snow.png\";\nimport tornado from \"./images/tornado.png\";\nimport thunder from \"./images/thunder.png\";\nimport windy from \"./images/windy.png\";\nimport arrow from \"./images/arrow.png\";\nimport humidity from \"./images/humidity.png\";\nconst api = {\n  key: \"67b10bbf46e6fecb07c0365d103c7e1f\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst cityData = {\n  base: \"https://api.openweathermap.org/data/2.5/onecall?\"\n};\n\nfunction MyModal(props) {\n  const [query, setQuery] = useState(\"\");\n  const [coord, setCoord] = useState({ lat: 47.61, lon: -122.33 });\n  const show = props.setModal;\n  const setWeather = props.setWeather;\n  console.log(\"here are the cordinates from modal\", coord);\n\n  async function fetchCoords() {\n    const response = await fetch(\n      `${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`\n    );\n    const json = await response.json();\n    setCoord(json.coord);\n    setQuery(\"\");\n  }\n  useEffect(() => {\n    if (coord) {\n      async function fetchCityData() {\n        const response = await fetch(\n          `${cityData.base}lat=${coord.lat}&lon=${coord.lon}&appid=${api.key}`\n        );\n        const json = await response.json();\n        setWeather(json);\n      }\n      fetchCityData();\n    }\n    return;\n  }, [coord]);\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetchCoords();\n      show(false);\n    }\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      style={{ position: \"absolute\", background: \"white\" }}\n    >\n      <Modal.Header style={{ textAlign: \"right\" }}>\n        <Button\n          style={{\n            background: \"transparent\",\n            border: \"none\",\n            color: \"red\",\n            fontSize: \"1.5rem\",\n            fontWeight: \"bold\",\n            margin: \"3px\",\n            cursor: \"pointer\"\n          }}\n          onClick={props.onHide}\n        >\n          X\n        </Button>\n      </Modal.Header>\n      <Modal.Title\n        style={{ fontSize: \"2rem\", textAlign: \"center\" }}\n        id=\"contained-modal-title-vcenter\"\n      >\n        Choose a city ?\n      </Modal.Title>\n      <Modal.Body style={{ textAlign: \"center\", margin: \"3rem\" }}>\n        <input\n          style={{\n            fontSize: \"1.2rem\",\n            borderRadius: \"25px\",\n            outline: \"none\",\n            height: \"40px\",\n            textAlign: \"center\"\n          }}\n          type=\"text\"\n          className=\"search-box\"\n          placeholder=\"Your city here...\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction App(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [weather, setWeather] = useState({});\n\n  if (weather) {\n    console.log(\"here is the weather passed from from modal\", weather);\n  }\n  const dateBuilder = d => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return ` ${date} ${month} ${year}`;\n  };\n\n  const weatherStatus =\n    typeof weather.main != \"undefined\" ? weather.weather[0].main : null;\n\n  let checkWeather = name => {\n    switch (name) {\n      case \"Clear\":\n        return sunny;\n        break;\n      case \"Clouds\":\n        return cloudy;\n        break;\n      case \"Rain\":\n        return rainy;\n        break;\n      case \"Snow\":\n        return snow;\n        break;\n      case \"Thunderstorm\":\n        return thunder;\n        break;\n      case \"Windy\":\n        return windy;\n        break;\n      case \"Tornado\":\n        return tornado;\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      {\n        <div class=\"container\">\n          <div class=\"weather-side\">\n            <div class=\"weather-gradient\"></div>\n            <div class=\"date-container\">\n              <h2 class=\"date-dayname\">Tuesday</h2>\n              <span class=\"date-day\">{dateBuilder(new Date())}</span>\n              <i class=\"location-icon\" data-feather=\"map-pin\"></i>\n              <span class=\"location\">Paris, FR</span>\n            </div>\n            <div class=\"weather-container\">\n              <i class=\"weather-icon\" data-feather=\"sun\"></i>\n              <h1 class=\"weather-temp\">29°C</h1>\n              <h3 class=\"weather-desc\">Sunny</h3>\n            </div>\n          </div>\n          <div class=\"info-side\">\n            <div class=\"today-info-container\">\n              <div class=\"today-info\">\n                <div class=\"precipitation\">\n                  {\" \"}\n                  <span class=\"title\">PRECIPITATION</span>\n                  <span class=\"value\">0 %</span>\n                  <div class=\"clear\"></div>\n                </div>\n                <div class=\"humidity\">\n                  {\" \"}\n                  <span class=\"title\">HUMIDITY</span>\n                  <span class=\"value\">34 %</span>\n                  <div class=\"clear\"></div>\n                </div>\n                <div class=\"wind\">\n                  {\" \"}\n                  <span class=\"title\">WIND</span>\n                  <span class=\"value\">0 km/h</span>\n                  <div class=\"clear\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"week-container\">\n              <ul class=\"week-list\">\n                <li class=\"active\">\n                  <i class=\"day-icon\" data-feather=\"sun\"></i>\n                  <span class=\"day-name\">Tue</span>\n                  <span class=\"day-temp\">29°C</span>\n                </li>\n                <li>\n                  <i class=\"day-icon\" data-feather=\"cloud\"></i>\n                  <span class=\"day-name\">Wed</span>\n                  <span class=\"day-temp\">21°C</span>\n                </li>\n                <li>\n                  <i class=\"day-icon\" data-feather=\"cloud-snow\"></i>\n                  <span class=\"day-name\">Thu</span>\n                  <span class=\"day-temp\">08°C</span>\n                </li>\n                <li>\n                  <i class=\"day-icon\" data-feather=\"cloud-rain\"></i>\n                  <span class=\"day-name\">Fry</span>\n                  <span class=\"day-temp\">19°C</span>\n                </li>\n                <div class=\"clear\"></div>\n              </ul>\n            </div>\n            <div class=\"location-container\">\n              <button\n                onClick={() => setModalShow(true)}\n                class=\"location-button\"\n              >\n                {\" \"}\n                <i data-feather=\"map-pin\"></i>\n                <span>Change location</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      }\n      <MyModal\n        setWeather={setWeather}\n        setModal={setModalShow}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n\n    // <div id=\"container\" style={{ display: \"flex\", height: \"100vh\" }}>\n    //   <Card\n    //     style={{\n    //       width: \"28rem\",\n    //       textAlign: \"center\",\n    //       margin: \"0 auto\",\n    //       paddingTop: \"5rem\"\n    //     }}\n    //   >\n    //     <Card.Body>\n    //       <Card.Title style={{ fontSize: \"2rem\" }}>Choose a city ?</Card.Title>\n    //       <div className=\"container\">\n    //         <div class=\"search-box\">\n    //           <input\n    //             type=\"text\"\n    //             className=\"search-box\"\n    //             placeholder=\"Search...\"\n    //             onChange={e => setQuery(e.target.value)}\n    //             value={query}\n    //             onKeyPress={search}\n    //           />\n    //           <span></span>\n    //         </div>\n    //       </div>\n    //       <Card.Text>\n    //         {typeof weather.main != \"undefined\" ? (\n    //           <div\n    //             style={{\n    //               marginTop: \"5rem\",\n    //               fontSize: \"1rem\",\n    //               fontWeight: \"bolder\"\n    //             }}\n    //           >\n    //             <div className=\"location-box\">\n    //               <Card.Img\n    //                 style={{ width: \"200px\" }}\n    //                 src={checkWeather(weatherStatus)}\n    //               />\n    //               <div className=\"location\">\n    //                 {weather.name}, {weather.sys.country}\n    //               </div>\n    //               <div className=\"date\">{dateBuilder(new Date())}</div>\n    //             </div>\n    //             <div className=\"weather-box\">\n    //               <div className=\"temp\">\n    //                 {Math.round(weather.main.temp)}°F | feels like{\" \"}\n    //                 {weather.main.}\n    //               </div>\n    //               <div className=\"weather\">{weather.weather[0].main}</div>\n    //               <div>\n    //                 <img style={{ width: \"10px\" }} src={arrow} />{\" \"}\n    //                 {weather.main.temp_max} °F\n    //               </div>\n    //               <div>\n    //                 <img\n    //                   style={{ width: \"10px\", transform: \"rotate(180deg)\" }}\n    //                   src={arrow}\n    //                 />{\" \"}\n    //                 {weather.main.temp_min} °F\n    //               </div>\n    //               <div>\n    //                 <img style={{ width: \"30px\" }} src={humidity} />\n    //                 {weather.main.humidity}\n    //               </div>\n    //             </div>\n    //           </div>\n    //         ) : (\n    //           \"\"\n    //         )}\n    //       </Card.Text>\n    //     </Card.Body>\n    //   </Card>\n    // </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}